
import java.awt.Cursor;
import java.awt.Desktop;
import java.net.URI;
import javax.swing.JOptionPane;
import javax.swing.plaf.OptionPaneUI;
import org.json.JSONArray;
import org.json.JSONObject;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author alberto
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        routerIPTxt = new javax.swing.JTextField();
        getSIPInfoBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultTxt = new javax.swing.JTextArea();
        passwordTxt = new javax.swing.JTextField();
        newPasswordTxt = new javax.swing.JTextField();
        newPasswordBtn = new javax.swing.JButton();
        getDefaultPasswordBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(400, 400));

        routerIPTxt.setText("192.168.1.1");
        routerIPTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                routerIPTxtActionPerformed(evt);
            }
        });

        getSIPInfoBtn.setText("Get SIP Info");
        getSIPInfoBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                getSIPInfoBtnMouseClicked(evt);
            }
        });

        resultTxt.setColumns(20);
        resultTxt.setRows(5);
        resultTxt.setText("INSTRUCTIONS - README!\n\n1. Get Default Password\n2. Get SIP Info\n\nFor security, we recommend to change the default password.\nTo do that, set the new password in the input field and click\n\"Set New Password\".\n\nAfter you set new password, the device will reboot automatically.\nIf you already changed your password, put it in the \"Password\" field\nand click \"Get SIP Info\". (You do not have to get the default password)");
        jScrollPane1.setViewportView(resultTxt);

        passwordTxt.setText("Password");
        passwordTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordTxtActionPerformed(evt);
            }
        });

        newPasswordTxt.setText("New Password");
        newPasswordTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPasswordTxtActionPerformed(evt);
            }
        });

        newPasswordBtn.setText("Set New Password");
        newPasswordBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newPasswordBtnMouseClicked(evt);
            }
        });

        getDefaultPasswordBtn.setText("Get Default Password");
        getDefaultPasswordBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                getDefaultPasswordBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(passwordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(newPasswordBtn))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(routerIPTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(newPasswordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(getDefaultPasswordBtn)
                            .addComponent(getSIPInfoBtn))
                        .addGap(0, 16, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(routerIPTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newPasswordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newPasswordBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(getDefaultPasswordBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(getSIPInfoBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void routerIPTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_routerIPTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_routerIPTxtActionPerformed

    private void getSIPInfoBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_getSIPInfoBtnMouseClicked
        // TODO add your handling code here:
        
        try{
            this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            resultTxt.setEnabled(false);
            
            LiveboxAPI.INSTANCE.setAdminPassword(passwordTxt.getText());
            
            LiveboxAPI.INSTANCE.setDOMAIN(routerIPTxt.getText());
            
            StringBuilder res = new StringBuilder();
            res.append("\nRouter MAC: "+ LiveboxAPI.INSTANCE.getMAC());

            JSONArray lines = LiveboxAPI.getLines();
            System.out.println(lines.toString());
            for(int i=0;i<lines.length();i++){
                JSONObject l = lines.getJSONObject(i);
                //System.out.println(l.getString("name"));
                if(l.getString("status").equals("Up"))
                {
                    JSONObject lineInfo = LiveboxAPI.getLine(l.getString("name"));
                    System.out.println(lineInfo.toString());

                    res.append("\nuserId: "+ lineInfo.getString("name"));
                    res.append("\nauthPassword: "+ lineInfo.getString("authPassword"));
                    res.append("\nauthId: "+ lineInfo.getString("authUserName"));
                }
            }

            JSONObject sip = LiveboxAPI.getSIP();
            res.append("\nuserAgentDomain: "+ sip.getString("userAgentDomain"));
            res.append("\noutboundProxyServer: "+ sip.getString("outboundProxyServer"));
            res.append("\noutboundProxyServerPort: "+ sip.getInt("outboundProxyServerPort"));
            
            resultTxt.setText(res.toString());
            resultTxt.setEnabled(true);
            this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }catch(Exception e){ 
            e.printStackTrace();
            
            resultTxt.setText(e.getMessage());
            resultTxt.setEnabled(true);
            this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }
        
    }//GEN-LAST:event_getSIPInfoBtnMouseClicked

    private void passwordTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordTxtActionPerformed

    private void newPasswordTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPasswordTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newPasswordTxtActionPerformed

    private void getDefaultPasswordBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_getDefaultPasswordBtnMouseClicked
        // TODO add your handling code here:
        try{
            this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            resultTxt.setEnabled(false);
            
            LiveboxAPI.INSTANCE.setDOMAIN(routerIPTxt.getText());
            LiveboxAPI.INSTANCE.getWAN();
            passwordTxt.setText(LiveboxAPI.INSTANCE.getAdminPassword());
            
            resultTxt.setEnabled(true);
            this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }catch(Exception e){ 
            e.printStackTrace();
            
            resultTxt.setText(e.getMessage());
            resultTxt.setEnabled(true);
            this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }
    }//GEN-LAST:event_getDefaultPasswordBtnMouseClicked

    private void newPasswordBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newPasswordBtnMouseClicked
        // TODO add your handling code here:
        try{
            int dialogResult = JOptionPane.showConfirmDialog(rootPane, "Are you sure you want to change your password?");
            if(dialogResult != JOptionPane.YES_OPTION){
                return;
            }
            
            
            this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            resultTxt.setEnabled(false);
            
            LiveboxAPI.INSTANCE.setDOMAIN(routerIPTxt.getText());
            LiveboxAPI.INSTANCE.setAdminPassword(passwordTxt.getText());
            
            LiveboxAPI.setUsrAdminPassword(newPasswordTxt.getText());
            LiveboxAPI.setOspPassword(newPasswordTxt.getText());
            
            LiveboxAPI.rebootRouter();
            
            resultTxt.setText("Password Set!\nRebooting..");
            resultTxt.setEnabled(true);
            this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }catch(Exception e){ 
            e.printStackTrace();
            
            resultTxt.setText(e.getMessage());
            resultTxt.setEnabled(true);
            this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }
    }//GEN-LAST:event_newPasswordBtnMouseClicked

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton getDefaultPasswordBtn;
    private javax.swing.JButton getSIPInfoBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton newPasswordBtn;
    private javax.swing.JTextField newPasswordTxt;
    private javax.swing.JTextField passwordTxt;
    private javax.swing.JTextArea resultTxt;
    private javax.swing.JTextField routerIPTxt;
    // End of variables declaration//GEN-END:variables
}
