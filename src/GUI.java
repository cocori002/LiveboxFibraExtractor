
import java.awt.Cursor;
import java.awt.Desktop;
import java.net.URI;
import org.json.JSONArray;
import org.json.JSONObject;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author alberto
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        routerIPTxt = new javax.swing.JTextField();
        getSIPInfoBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultTxt = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        routerIPTxt.setText("192.168.1.1");
        routerIPTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                routerIPTxtActionPerformed(evt);
            }
        });

        getSIPInfoBtn.setText("Get SIP Info");
        getSIPInfoBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                getSIPInfoBtnMouseClicked(evt);
            }
        });

        resultTxt.setColumns(20);
        resultTxt.setRows(5);
        jScrollPane1.setViewportView(resultTxt);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(routerIPTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(getSIPInfoBtn))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(routerIPTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(getSIPInfoBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void routerIPTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_routerIPTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_routerIPTxtActionPerformed

    private void getSIPInfoBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_getSIPInfoBtnMouseClicked
        // TODO add your handling code here:
        
        try{
            this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            resultTxt.setEnabled(false);
            
            LiveboxAPI.INSTANCE.setDOMAIN(routerIPTxt.getText());
            LiveboxAPI.INSTANCE.getWAN();
            StringBuilder res = new StringBuilder();
            res.append("\nRouter MAC: "+ LiveboxAPI.INSTANCE.getMAC());

            JSONArray lines = LiveboxAPI.getLines();
            System.out.println(lines.toString());
            for(int i=0;i<lines.length();i++){
                JSONObject l = lines.getJSONObject(i);
                //System.out.println(l.getString("name"));
                if(l.getString("status").equals("Up"))
                {
                    JSONObject lineInfo = LiveboxAPI.getLine(l.getString("name"));
                    System.out.println(lineInfo.toString());

                    res.append("\nuserId: "+ lineInfo.getString("name"));
                    res.append("\nauthPassword: "+ lineInfo.getString("authPassword"));
                    res.append("\nauthId: "+ lineInfo.getString("authUserName"));
                }
            }

            JSONObject sip = LiveboxAPI.getSIP();
            res.append("\nuserAgentDomain: "+ sip.getString("userAgentDomain"));
            res.append("\noutboundProxyServer: "+ sip.getString("outboundProxyServer"));
            res.append("\noutboundProxyServerPort: "+ sip.getInt("outboundProxyServerPort"));
            
            resultTxt.setText(res.toString());
            resultTxt.setEnabled(true);
            this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }catch(Exception e){ 
            e.printStackTrace();
            
            resultTxt.setText(e.getMessage());
            resultTxt.setEnabled(true);
            this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }
        
    }//GEN-LAST:event_getSIPInfoBtnMouseClicked

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton getSIPInfoBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea resultTxt;
    private javax.swing.JTextField routerIPTxt;
    // End of variables declaration//GEN-END:variables
}
